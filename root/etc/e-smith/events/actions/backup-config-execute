#! /usr/bin/perl -w
#
# Copyright (C) 2013 Nethesis S.r.l.
# Copyright (C) 2006 SME Server
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use File::Find;
use esmith::ConfigDB;
use NethServer::BackupConfig;

sub not_in_rpm {
    my ( $list, $exclude, $file) = @_;
    if (grep $_ eq $File::Find::name, @$exclude) {
        return;
    }
    if (-f $File::Find::name && system("/bin/rpm -qf ".$File::Find::name." >/dev/null") != 0) {
       push(@$list, $File::Find::name);
    }
}

sub do_backup {
   my ( $backup, $include, $exclude) = @_;
   if ( $backup->backup_config($include, $exclude) == 0) {
       chmod(0640,NethServer::BackupConfig::DESTINATION);
       system("/usr/libexec/nethserver/backup-config-md5 ".NethServer::BackupConfig::DESTINATION);
   } else {
       $backup->logger('ERROR',"Can't create tar file.");
       exit 1;
   }
}

my $backup = new NethServer::BackupConfig();
my @exclude_files = $backup->excludes(NethServer::BackupConfig::CONF_DIR);

# Read include and exclude from config directory
my @files = $backup->includes(NethServer::BackupConfig::CONF_DIR);
my @include_files = ();
# Excludes file belonging to rpm 
for my $file (@files) {
    if ( -f $file) {
        find ( sub { not_in_rpm (\@include_files, \@exclude_files, $_) }, $file );
    }
}

if (!@include_files) {
    $backup->logger('ERROR',"Nothing to backup - 1");
    exit 1;
}
   
# Create backup if destination file doesn't exists
if ( ! -e NethServer::BackupConfig::DESTINATION ) {
   do_backup ( $backup, \@include_files, \@exclude_files);
} else { # Or any file is changed
    my $cmd = "/usr/bin/md5sum --status -c ".NethServer::BackupConfig::DESTINATION."-content.md5 2>/dev/null";
    if ( system($cmd) != 0) {
        do_backup ( $backup, \@include_files, \@exclude_files);
    }
}


exit 0;
