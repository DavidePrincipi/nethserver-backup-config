#! /usr/bin/perl -w
#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use NethServer::BackupConfig;
use Getopt::Long;

my $status;
my $samehardware = '';
GetOptions("same-hardware!"=>\$samehardware);

my $backup = new NethServer::BackupConfig();
$backup->set_log_file("/var/log/restore-config.log");

$backup->logger("START","Restore config started");

if ( ! -f NethServer::BackupConfig::DESTINATION ) {
    my $conf = esmith::ConfigDB->open || die("Could not open config db\n");
    my $bd = $conf->get('backup-data');
    my $program = $bd->prop('Program') || 'duplicity';
    if ($status = system("/etc/e-smith/events/actions/restore-config-$program ".NethServer::BackupConfig::DESTINATION)) {
        $backup->bad_exit("No configuration backup file found or can't extract from data backup");
    }
}


if ($status = system("/sbin/e-smith/signal-event pre-restore-config $samehardware"))
{
    $backup->bad_exit("Event pre-restore-config failed", $status);
}
$backup->logger("STEP","pre-restore-config done");

if ($status = system("/etc/e-smith/events/actions/restore-config-execute $samehardware"))
{
    $backup->bad_exit("Action restore-config-execute failed", $status);
}
$backup->logger("STEP","restore-config-execute done");

if ($status = system("/sbin/e-smith/signal-event post-restore-config $samehardware"))
{
    $backup->bad_exit("Event post-restore-config failed", $status);
}

$backup->logger("SUCCESS","Restore config done");

exit 0;
